---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS Subnet

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-subnet

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-subnet/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-subnet/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-subnet/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-subnet/actions/workflows/terraform.yml"

#  description of this project
description: |-
  Terraform module to create public, private and public-private subnet with network acl, route table, Elastic IP, nat gateway, flow log.

# extra content
include:
  - "terraform.md"

# How to use this project
usage: |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Private Subnet
  ```hcl
    module "subnets" {
      source              = "clouddrove/terraform-aws-subnet/aws"
      version             = "1.3.0"
      name                = "subnets"
      environment         = "test"
      label_order         = ["name", "environment"]
      availability_zones  = ["eu-west-1a", "eu-west-1b", "eu-west-1c"]
      vpc_id              = "vpc-xxxxxxxxx"
      type                = "private"
      nat_gateway_enabled = true
      cidr_block          = "10.0.0.0/16"
      ipv6_cidr_block     = module.vpc.ipv6_cidr_block
      public_subnet_ids   = ["subnet-XXXXXXXXXXXXX", "subnet-XXXXXXXXXXXXX"]
    }
  ```

  ### Public-Private Subnet
  ```hcl
    module "subnets" {
      source              = "clouddrove/terraform-aws-subnet/aws"
      version             = "1.3.0"
      name                = "subnets"
      environment         = "test"
      label_order         = ["name", "environment"]
      availability_zones  = ["eu-west-1a", "eu-west-1b", "eu-west-1c"]
      vpc_id              = "vpc-xxxxxxxxx"
      type                = "public-private"
      igw_id              = "ig-xxxxxxxxx"
      nat_gateway_enabled = true
      cidr_block          = "10.0.0.0/16"
      ipv6_cidr_block     = module.vpc.ipv6_cidr_block
    }
  ```

    ### Public-Private Subnet with single Nat Gateway
  ```hcl
    module "subnets" {
      source              = "clouddrove/terraform-aws-subnet/aws"
      version             = "1.3.0"
      name                = "subnets"
      environment         = "test"
      label_order         = ["name", "environment"]
      availability_zones  = ["eu-west-1a", "eu-west-1b", "eu-west-1c"]
      vpc_id              = "vpc-xxxxxxxxx"
      type                = "public-private"
      igw_id              = "ig-xxxxxxxxx"
      nat_gateway_enabled = true
      single_nat_gateway  = true
      cidr_block          = "10.0.0.0/16"
      ipv6_cidr_block     = module.vpc.ipv6_cidr_block
    }
  ```

  ### Public Subnet
  ```hcl
    module "subnets" {
      source              = "clouddrove/terraform-aws-subnet/aws"
      version             = "1.3.0"
      name                = "subnets"
      environment         = "test"
      label_order         = ["name", "environment"]
      availability_zones  = ["us-east-1a", "us-east-1b", "us-east-1c"]
      vpc_id              = "vpc-xxxxxxxxx"
      type                = "public"
      igw_id              = "ig-xxxxxxxxx"
      cidr_block          = "10.0.0.0/16"
      ipv6_cidr_block     = module.vpc.ipv6_cidr_block
    }
  ```
  ### Public-private-subnet-single-nat-gateway
  ```hcl
    module "subnets" {
      source              = "clouddrove/terraform-aws-subnet/aws"
      version             = "1.3.0"
      nat_gateway_enabled = true
      single_nat_gateway  = true
      name                = "subnets"
      environment         = "example"
      label_order         = ["name", "environment"]
      availability_zones  = ["eu-west-1a", "eu-west-1b", "eu-west-1c"]
      vpc_id              = "vpc-xxxxxxxxxx"
      type                = "public-private"
      igw_id              = "ig-xxxxxxxxxxx"
      cidr_block          = "10.0.0.0/16"
      ipv6_cidr_block     = module.vpc.ipv6_cidr_block
    }
  ```
